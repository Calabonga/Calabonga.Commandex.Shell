<Window x:Name="window"  x:Class="Calabonga.Commandex.Shell.Views.ShellWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:viewModels="clr-namespace:Calabonga.Commandex.Shell.ViewModels"
        mc:Ignorable="d"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:local="clr-namespace:Calabonga.Commandex.Shell.CustomControls"
        xmlns:models="clr-namespace:Calabonga.Commandex.Shell.Models"
        d:DataContext="{d:DesignInstance Type=viewModels:ShellWindowViewModel}"
        WindowStartupLocation="CenterScreen"
        Width="1024"
        Height="768"
        MinWidth="1024"
        MinHeight="768"
        Icon="/logo.png" UseLayoutRounding="True">
    <Window.InputBindings>
        <KeyBinding Command="{Binding OpenLogsFolderCommand}" Key="L" Modifiers="Control+Shift"/>
        <KeyBinding Command="{Binding ToggleSearchBarVisibilityCommand}" Key="F" Modifiers="Control"/>
        <KeyBinding Command="{Binding SwitchViewCommand}" CommandParameter="{x:Static models:CommandViewType.DefaultList}" Key="F1" Modifiers="Control"/>
        <KeyBinding Command="{Binding SwitchViewCommand}" CommandParameter="{x:Static models:CommandViewType.BriefList}" Key="F2" Modifiers="Control"/>
        <KeyBinding Command="{Binding SwitchViewCommand}" CommandParameter="{x:Static models:CommandViewType.ExtendedList}" Key="F3" Modifiers="Control"/>
        <KeyBinding Command="{Binding SwitchViewCommand}" CommandParameter="{x:Static models:CommandViewType.DefaultHierarchical}" Key="F4" Modifiers="Control"/>
    </Window.InputBindings>

    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <local:ListViewNameConverter x:Key="ListViewNameConverter" />
    </Window.Resources>

    <Window.Title>
        <MultiBinding StringFormat="{} {0}: {1} command(s) found">
            <Binding Path="Title"/>
            <Binding Path="CommandItems.Count"/>
        </MultiBinding>
    </Window.Title>

    <Window.Triggers>
        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
            <BeginStoryboard>
                <Storyboard Storyboard.TargetName="window">
                    <DoubleAnimation Storyboard.TargetProperty="MinWidth" To="{Binding ElementName=window, Path=ActualWidth}"/>
                </Storyboard>
            </BeginStoryboard>
            <BeginStoryboard>
                <Storyboard Storyboard.TargetName="window">
                    <DoubleAnimation Storyboard.TargetProperty="MinHeight" To="{Binding ElementName=window, Path=ActualHeight}"/>
                </Storyboard>
            </BeginStoryboard>
        </EventTrigger>
    </Window.Triggers>

    <DockPanel LastChildFill="True">

        <Menu DockPanel.Dock="Top" >
            <MenuItem Header="Command" IsEnabled="{Binding CanExecuteAction}">
                <MenuItem Header="Execute" Command="{Binding ExecuteActionCommand}" />
                <MenuItem Header="Settings" Command="{Binding OpenCommandConfigurationCommand}" />
            </MenuItem>
            <MenuItem Header="View">
                <MenuItem Header="Show find input" IsChecked="{Binding IsFindEnabled, Mode=TwoWay}" IsCheckable="True" InputGestureText="Ctrl+F"  />
                <Separator/>
                <local:RadioMenuItem Header="List Default" 
                                     GroupName="ViewType" InputGestureText="Ctrl+F1"
                                     IsChecked="{Binding ListViewName, Mode=TwoWay, ConverterParameter={x:Static models:CommandViewType.DefaultList}, Converter={StaticResource ListViewNameConverter}}"
                                     Command="{Binding SwitchViewCommand}" CommandParameter="{x:Static models:CommandViewType.DefaultList}"/>
                <local:RadioMenuItem Header="List Brief"
                                     GroupName="ViewType" InputGestureText="Ctrl+F2"
                                     IsChecked="{Binding ListViewName, Mode=TwoWay, ConverterParameter={x:Static models:CommandViewType.BriefList}, Converter={StaticResource ListViewNameConverter}}"
                                     Command="{Binding SwitchViewCommand}" CommandParameter="{x:Static models:CommandViewType.BriefList}"/>
                <local:RadioMenuItem Header="List Extended"
                                     GroupName="ViewType" InputGestureText="Ctrl+F3"
                                     IsChecked="{Binding ListViewName, Mode=TwoWay, ConverterParameter={x:Static models:CommandViewType.ExtendedList}, Converter={StaticResource ListViewNameConverter}}"
                                     Command="{Binding SwitchViewCommand}" CommandParameter="{x:Static models:CommandViewType.ExtendedList}"/>
                <Separator/>
                <local:RadioMenuItem Header="Hierarchical Default"
                                     GroupName="ViewType" InputGestureText="Ctrl+F4"
                                     IsChecked="{Binding ListViewName, Mode=TwoWay, ConverterParameter={x:Static models:CommandViewType.DefaultHierarchical}, Converter={StaticResource ListViewNameConverter}}"
                                     Command="{Binding SwitchViewCommand}" CommandParameter="{x:Static models:CommandViewType.DefaultHierarchical}"/>
                <local:RadioMenuItem Header="Hierarchical Brief"
                                     GroupName="ViewType" InputGestureText="Ctrl+F5"
                                     IsChecked="{Binding ListViewName, Mode=TwoWay, ConverterParameter={x:Static models:CommandViewType.BriefHierarchical}, Converter={StaticResource ListViewNameConverter}}"
                                     Command="{Binding SwitchViewCommand}" CommandParameter="{x:Static models:CommandViewType.BriefHierarchical}"/>
                <local:RadioMenuItem Header="Hierarchical Extended"
                                     GroupName="ViewType" InputGestureText="Ctrl+F6"
                                     IsChecked="{Binding ListViewName, Mode=TwoWay, ConverterParameter={x:Static models:CommandViewType.ExtendedHierarchical}, Converter={StaticResource ListViewNameConverter}}"
                                     Command="{Binding SwitchViewCommand}" CommandParameter="{x:Static models:CommandViewType.ExtendedHierarchical}"/>

            </MenuItem>
            <MenuItem Header="About">
                <MenuItem Header="About Commandex" Command="{Binding ShowAboutCommand}"/>
                <MenuItem Header="Open Commandex Logs" Command="{Binding OpenLogsFolderCommand}" InputGestureText="Ctrl+Shift+L"/>
            </MenuItem>
        </Menu>

        <ProgressBar  IsIndeterminate="True" DockPanel.Dock="Top" Height="4"
                      Visibility="{Binding IsBusy, Converter={StaticResource BooleanToVisibilityConverter}}" />

        <Border DockPanel.Dock="Top">
            <Grid Margin="4" Visibility="{Binding IsFindEnabled, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" Text="Find" Margin="0,0,4,0"/>
                <TextBox Grid.Column="1" Text="{Binding SearchTerm, UpdateSourceTrigger=PropertyChanged}"/>
            </Grid>
        </Border>

        <TreeView ItemTemplate="{Binding CommandItemDataTemplate}"
                  Margin="4"
                  HorizontalContentAlignment="Stretch"
                  ItemContainerStyle="{StaticResource TreeViewItemStyle1}"
                  ItemsSource="{Binding CommandItems}"
                  ScrollViewer.HorizontalScrollBarVisibility="Disabled">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseDoubleClick">
                    <i:InvokeCommandAction Command="{Binding ExecuteActionCommand}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <i:Interaction.Behaviors>
                <local:BindableSelectedItemBehavior SelectedItem="{Binding SelectedCommand, Mode=TwoWay}" />
            </i:Interaction.Behaviors>
        </TreeView>


    </DockPanel>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadDataCommand, Mode=OneWay}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

</Window>
